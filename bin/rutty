#!/usr/bin/env ruby
require 'rubygems'
require 'commander/import'
require 'rutty'

$r = Rutty::Runner.new

# Helpers
add_filter_options = lambda { |c| 
  c.option('--keypath PATH', String, 'Path to a private key')
  c.option('--user NAME', String, 'User login')
  c.option('--port NUMBER', Integer, 'SSH port number')
  c.option('--tags TAG1[,TAG2,...]', Array, 'Comma-separated list of tags')
}

# Commander config
program :name, 'rutty'
program :description, 'A DSH implementation in Ruby'
program :version, $r.get_version
program :help_formatter, Commander::HelpFormatter::TerminalCompact

default_command :dsh

# Commander commands
command :init do |c|
  c.syntax = "rutty init"
  c.summary = "Creates the default file structure for rutty."
  c.when_called do
    r = Rutty::Runner.new
    r.init
  end
end

command :add_node do |c|
  c.syntax = "rutty add_node <HOST> [options]"
  c.summary = "Add a node to the pool."
  c.description = "#{c.summary} This is just a convenience method, you can also add a node directly to $HOME/.rutty/nodes.yaml"
  
  c.example "Add the 'localhost' node with just a keypath", "rutty add_node localhost --keypath ~/.ssh/my_key.pem"
  c.example "Add a remote IP with all the options", 
    "rutty add_node 192.168.1.100 --keypath ~/.ssh/my_key.pem --user root --tags local,funtimes,awesome"
  
  add_filter_options.call(c)
  
  c.when_called do |args, options|
    r = Rutty::Runner.new
    r.add_node args, options
  end
end

command :list_nodes do |c|
  # TODO: Make tag searching AND or OR, not just OR
  c.syntax = "rutty list_nodes [options]"
  c.summary = "List nodes according to [options]."
  c.description = "#{c.summary} Options are the same as add_node"
  
  c.example "List all nodes", "rutty list_nodes"
  c.example "List all nodes that are tagged with 'web' OR 'db'", "rutty list_nodes --tags web,db"
  c.example "List all nodes configued to SSH into port 2222", "rutty list_nodes --port 2222"
  
  add_filter_options.call(c)
  
  c.when_called do |args, options|
    r = Rutty::Runner.new
    r.list_nodes args, options
  end
end

command :dsh do |c|
  c.syntax = "rutty [dsh] [options] COMMAND"
  c.summary = "Runs the specified COMMAND across all nodes that match [options]"
  
  c.example "Get a list of all users logged in to all your web and app nodes", "rutty --tags web,app w"
  c.example "See all your nodes' current memory footprint", "rutty -a \"free -m\""
  
  c.option('--tags TAG1[,TAG2,...]', Array, 'Comma-separated list of tags to run the command on')
  c.option('-a', 'Run the command on ALL nodes')
  c.option('-d', '--debug', 'Enable debug output')
  
  c.when_called do |args, options|
    r = Rutty::Runner.new
    r.dsh args, options
  end
end

command :scp do |c|
  c.syntax = "rutty scp [options] LOCAL_PATH REMOTE_PATH"
  c.summary = "Uploads a file to the nodes according to [options]."
  c.description = "#{c.summary} Unlike the actual scp command, this action is one-way: upload only."
  
  c.option('--tags TAG1[,TAG2,...]', Array, 'Comma-separated list of tags to run the command on')
  c.option('-a', 'Run the command on ALL nodes')
  c.option('-d', '--debug', 'Enable debug output')
  
  c.when_called do |args, options|
    r = Rutty::Runner.new
    r.dsh args, options
  end
end

